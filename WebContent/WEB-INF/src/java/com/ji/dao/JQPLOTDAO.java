/* * Copyright 2008-2009 the original author or authors. * * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * *      http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.ji.dao;import java.io.IOException;import java.sql.SQLException;import java.util.HashMap;import java.util.Map;import javax.annotation.Resource;import org.apache.log4j.Logger;import org.springframework.stereotype.Repository;import com.ji.common.HtmlTag;import com.ji.common.JSysException;import com.ji.dao.cm.CMDAO;import com.ji.service.CMSService;import com.ji.util.CmsDsDao;import egovframework.rte.fdl.property.EgovPropertyService;/**   * @Class Name : JQPLOTDAO.java * @Description : JQPLOTDAO DAO Class  * @Modification Information   * @ * @  수정일      수정자              수정내용 * @ ---------   ---------   ------------------------------- * @ 1009.03.16           최초생성 *  * @author 개발프레임웍크 실행환경 개발팀 * @since 2009. 03.16 * @version 1.0 * @see *  */@Repository("jQPLOTDAO")public class JQPLOTDAO extends CmsDsDao {	protected Logger log = Logger.getLogger(JQPLOTDAO.class); //현재 클래스 이름을 Logger에 등록		/** cmDAO */    @Resource(name="cmDAO")    private CMDAO cmDAO;        /** cmsService */    @Resource(name = "cmsService")    protected CMSService cmsService;        /** EgovPropertyService */    @Resource(name = "propertiesService")    protected EgovPropertyService propertiesService;	    private String sql_id="JiCmCms.selectJqPlotBARCHART";    /**	 * 메뉴트리를 조회하는 메소드	 * @param Map	 * @return 메뉴트리	 * @exception Exception	 */    public Map ctlCMS(Map param) throws IOException, SQLException, NullPointerException, ArrayIndexOutOfBoundsException, Exception {		//	TODO ctlCMS		log.debug("==== ctlCMS Start ====");		Map result_map = new HashMap();				String pstate = HtmlTag.returnString((String)param.get("pstate"),"L");		try{						if(pstate.equals("L")){			// 등록			}else if(pstate.equals("X")){ //ajax jqGrid data관련				result_map = cmDAO.selectListBarPieChart(param,sql_id);			}		}catch(JSysException q){				log.debug("ctlCMS throw JSysException >>>>> : ");				throw q;				}catch(NullPointerException q){			log.debug("ctlCMS NullPointerException:");			throw new JSysException(super.getMessage("ji.cm.common.msg.error.syntax"),q);		//구문오류가 발생하였습니다..		}catch(ArrayIndexOutOfBoundsException q){			log.debug("ctlCMS ArrayIndexOutOfBoundsException:");			throw new JSysException(super.getMessage("ji.cm.common.msg.error.syntax"),q);		//구문오류가 발생하였습니다		}catch(SQLException q){			log.debug("SQLException:");			throw new JSysException(super.getMessage("ji.cm.common.msg.error.syntax"),q);		//구문오류가 발생하였습니다				}catch(Exception q){			log.debug("ctlCMS Exception >>>>> : ");				throw new JSysException(super.getMessage("ji.cm.common.msg.error.syntax"),q);		//구문오류가 발생하였습니다.			}		    	log.debug("==== ctlCMS End ====");		return result_map;    }}