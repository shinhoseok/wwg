/**   * @Class Name : CmPopDAO01.java * @Description : CmPopDAO01 DAO Class 기준정보 * @Modification Information   * @ * @  수정일      수정자              수정내용 * @ ---------   ---------   ------------------------------- * @ 2017.02.22          최초생성 *  * @author 개발프레임웍크 실행환경 개발팀 * @since 2016.10.31 * @version 1.0 * @see *  */package com.ji.dao.cm.pop;
import java.io.File;import java.io.IOException;import java.sql.SQLException;import java.util.ArrayList;import java.util.HashMap;import java.util.Iterator;import java.util.List;import java.util.Map;import java.util.Map.Entry;import javax.annotation.Resource;import net.sf.json.JSONArray;import net.sf.json.JSONObject;import org.apache.log4j.Logger;import org.springframework.stereotype.Repository;import com.ji.cm.CM_Util;import com.ji.common.HtmlTag;import com.ji.common.JSysException;import com.ji.dao.cm.CMDAO;import com.ji.dao.cm.mtm.CmMtmDAO01;import com.ji.service.CMSService;import com.ji.util.CmsDsDao;import com.ji.util.Page;import egovframework.rte.fdl.property.EgovPropertyService;

@Repository("cmPopDAO01")
public class CmPopDAO01 extends CmsDsDao {
	protected Logger log = Logger.getLogger(CmPopDAO01.class); //현재 클래스 이름을 Logger에 등록
	/** cmDAO */    @Resource(name="cmDAO")    private CMDAO cmDAO;        /** cmMtmDAO01 */    @Resource(name="cmMtmDAO01")    private CmMtmDAO01 cmMtmDAO01;               /** cmsService */    @Resource(name = "cmsService")    protected CMSService cmsService;     /** EgovPropertyService */    @Resource(name = "propertiesService")    protected EgovPropertyService propertiesService;	
    /**	 * 관리 메소드	 * @param Map	 * @return Map	 * @exception Exception	 */    // TODO : ctlCMS    @SuppressWarnings("unchecked")	public Map ctlCMS(Map param) throws IOException, SQLException, NullPointerException, ArrayIndexOutOfBoundsException, Exception {		log.debug("==== CmPopDAO01 ctlCMS Start ====");		Map result_map = new HashMap();				String pstate = HtmlTag.returnString((String)param.get("pstate"),"L");			try{			//Map SITE_SESSION		= (Map)param.get(propertiesService.getString("SITE_ADM_SESSION_FN"));			// 기준정보 목록			if(pstate.equals("L")){
			// 팝업리스트			}else if(pstate.equals("XL1")){ //ajax jqGrid data관련				result_map = selectListGrid(param); 							// 등록처리			}else if(pstate.equals("C")){				result_map = insertPop(param);				// 수정처리			}else if(pstate.equals("U")){				result_map = updatePop(param);				// 삭제처리			}else if(pstate.equals("D")){				result_map = deletePop(param);							//게시글 비밀번호 확인팝업
			}else if(pstate.equals("PL")){				result_map.put("param", param);			}					}catch(JSysException q){				log.debug("ctlCMS throw JSysException >>>>> :  "+q);				throw q;				}catch(NullPointerException q){			log.debug("ctlCMS NullPointerException:"+q);			throw new JSysException(super.getMessage("ji.cm.common.msg.error.syntax"),q);		//구문오류가 발생하였습니다..		}catch(ArrayIndexOutOfBoundsException q){			log.debug("ctlCMS ArrayIndexOutOfBoundsException:"+q);			throw new JSysException(super.getMessage("ji.cm.common.msg.error.syntax"),q);		//구문오류가 발생하였습니다		}catch(SQLException q){			log.debug("SQLException:"+q);			throw new JSysException(super.getMessage("ji.cm.common.msg.error.syntax"),q);		//구문오류가 발생하였습니다				}catch(Exception q){			log.debug("ctlCMS Exception >>>>> :  "+q);				throw new JSysException(super.getMessage("ji.cm.common.msg.error.syntax"),q);		//구문오류가 발생하였습니다.			}
	
    	log.debug("==== CmPopDAO01 ctlCMS End ====");
		return result_map;
    }
	/**	 * Method Name  : selectListMatrGrid	 * Description  : 자재마스터 리스트 	* Comment      : 	* Parameter    : param - 정보가 담긴 Map 	* form History : 2016/10/31 : 이금용:  최초작성	*/	//	TODO selectListGrid	public Map selectListGrid (Map param) throws Exception {		log.debug("==== selectListGrid Start ====");		Map result_map = new HashMap();
		
		try{
			result_map = cmDAO.selectListGrid(param, "JiCmCms.getPopSelect");			//list("JiCmCms.getPopSelect", param);
		}catch(NullPointerException q){			log.debug("Exception:");					}catch(ArrayIndexOutOfBoundsException q){			log.debug("Exception:");		}catch(Exception q){			log.debug("==== selectListGrid Exception ====");		}		    	log.debug("==== selectListGrid End ====");		return result_map;
	} 	

	/**	* <p> ctlCMS(메인Dao컨트롤클래스)에서 해당데이터를 등록하는 메소드</p>	* Precondition : param에 해당 파라메터가 들어 있어야한다 	* 				 쿼리가 정의되어야한다	* Postcondition: 등록 결과를 받아서 리턴한다	*	* @param   param		Map		입력데이터	*	* @return  등록 결과값을 리턴한다	* @throws JSysException 	* @throws  	*/		// TODO : insertPop	public Map insertPop(Map param) throws IOException, SQLException, NullPointerException, ArrayIndexOutOfBoundsException, Exception{
		log.debug("==== insertPop : START ====");		Map result_map = new HashMap();		Map query_param = new HashMap();
	    Map SITE_ADM_SESSION	= (Map)param.get(propertiesService.getString("SITE_ADM_SESSION_FN"));	    String USER_ID			= HtmlTag.StripStrInXss(HtmlTag.returnString((String)SITE_ADM_SESSION.get("USER_ID"),""));	    Map temp_file = new HashMap();	    int max_seq = 0;
		String sql = "";	

		try{
			// 등록자 id 셋팅			param.put("user_id", USER_ID);									// 해당 기간에 설정된 팝업은 3개까지만 가능하다				sql = "JiCmCms.getPopChk";				query_param = new HashMap();				query_param.put("iuse_st_dt",HtmlTag.returnString((String)param.get("iuse_st_dt"),""));				query_param.put("iuse_end_dt",HtmlTag.returnString((String)param.get("iuse_end_dt"),""));				query_param.put("imode","I");												//				if((Integer)getSqlMapClientTemplate().queryForObject(sql, query_param) > 0){				if(getInt(sql, query_param) > 9){					//result_map.put("result",false);					//result_map.put("TRS_MSG","코드가 중복되었습니다.");					//result_map.put(propertiesService.getString("RESULT_URL_R_KEY"),"Y");					//result_map.put(propertiesService.getString("RESULT_STA_KEY"),propertiesService.getString("FORWARD_FAILURE"));										throw new JSysException("동일한 기간에 팝업이 이미 10개가 등록되어있습니다.");									}						max_seq = cmDAO.getTableMaxSeq("JIT9601","IDX","");			param.put("max_seq", max_seq);			
			// 팝업을 등록한다			sql = "JiCmCms.insertPop";
			insert(sql, param);						param.put("imenu_data_title", HtmlTag.StripStrInXss(HtmlTag.returnString((String)param.get("ibn_title"),"")));			param.put("ikey_datas", Long.toString(max_seq));						temp_file = cmMtmDAO01.InsertFile(param);			
			result_map.put("result", true);			result_map.put(propertiesService.getString("RESULT_STA_KEY"),propertiesService.getString("FORWARD_SUCCESS"));			result_map.put(propertiesService.getString("RESULT_URL_R_KEY"),"Y");		
		}catch(JSysException q){				log.debug("throw JSysException >>>>> :  ");				throw q;				}catch(NullPointerException q){			log.debug("NullPointerException:");			throw new JSysException(super.getMessage("ji.cm.common.msg.error.save"),q);		//저장 중 오류가 발행하였습니다.		}catch(ArrayIndexOutOfBoundsException q){			log.debug("ArrayIndexOutOfBoundsException:");			throw new JSysException(super.getMessage("ji.cm.common.msg.error.save"),q);		///저장 중 오류가 발행하였습니다.		}catch(Exception q){							log.debug("JSysException Exception >>>>> :  ");				throw new JSysException(super.getMessage("ji.cm.common.msg.error.save"),q);		///저장 중 오류가 발행하였습니다.		}finally{			result_map.put(propertiesService.getString("RESULT_URL_T_KEY"),"parent");		}
		log.debug("==== insertPop : END ====");
		return result_map;	
	}
	
	/**	* <p> ctlCMS(메인Dao컨트롤클래스)에서 해당데이터를 수정하는 메소드</p>	* Precondition : param에 해당 파라메터가 들어 있어야한다 	* 				 쿼리가 정의되어야한다	* Postcondition: 등록 결과를 받아서 리턴한다	*	* @param   param		Map		입력데이터	*	* @return  등록 결과값을 리턴한다	* @throws JSysException 	* @throws  	*/		// TODO : updatePop
	public Map updatePop(Map param) throws IOException, SQLException, NullPointerException, ArrayIndexOutOfBoundsException, Exception{
		log.debug("==== updatePop : START ====");
		Map result_map = new HashMap();		Map query_param = new HashMap();		Map temp_file = new HashMap();	    Map SITE_ADM_SESSION	= (Map)param.get(propertiesService.getString("SITE_ADM_SESSION_FN"));	    String USER_ID			= HtmlTag.StripStrInXss(HtmlTag.returnString((String)SITE_ADM_SESSION.get("USER_ID"),""));	    String sidx  = HtmlTag.StripStrInXss(HtmlTag.returnString((String)param.get("sidx"),""));// 등록코드	    String ORDER_NOh = HtmlTag.StripStrInXss(HtmlTag.returnString((String)param.get("ORDER_NOh"),""));// 원래순번	    String ibn_order_no = HtmlTag.StripStrInXss(HtmlTag.returnString((String)param.get("ibn_order_no"),""));// 수정순번	    		String sql = "";			try{			// 등록자 id 셋팅			param.put("user_id", USER_ID);			// 필수 입력값체크			if(sidx.equals("")){				result_map.put("result",false);				result_map.put("TRS_MSG","필수입력값이 입력되지않았습니다");				result_map.put(propertiesService.getString("RESULT_URL_R_KEY"),"Y");				result_map.put(propertiesService.getString("RESULT_STA_KEY"),propertiesService.getString("FORWARD_FAILURE"));									//throw new JSysException("코드가 중복되었습니다.");				return result_map;							}			// 해당 기간에 설정된 팝업은 3개까지만 가능하다			sql = "JiCmCms.getPopChk";			query_param = new HashMap();			query_param.put("iuse_st_dt",HtmlTag.returnString((String)param.get("iuse_st_dt"),""));			query_param.put("iuse_end_dt",HtmlTag.returnString((String)param.get("iuse_end_dt"),""));			query_param.put("imode","U");			query_param.put("sidx",sidx);			//			if((Integer)getSqlMapClientTemplate().queryForObject(sql, query_param) > 0){			if(getInt(sql, query_param) > 9){				//result_map.put("result",false);				//result_map.put("TRS_MSG","코드가 중복되었습니다.");				//result_map.put(propertiesService.getString("RESULT_URL_R_KEY"),"Y");				//result_map.put(propertiesService.getString("RESULT_STA_KEY"),propertiesService.getString("FORWARD_FAILURE"));									throw new JSysException("동일한 기간에 팝업이 이미 10개가 등록되어있습니다.");							}						// 만일 정렬 순번을 수정한경우 순번값을 조정해 준다			if(!ORDER_NOh.equals(ibn_order_no)){				// 원래 순번이 빠지면 원래 순번보다 큰순번의 데이터들은 -1을 해준다				sql = "JiCmCms.updateDelPop";				query_param = new HashMap();				query_param.put("ORDER_NOh",ORDER_NOh);								update(sql, query_param);				// 수정될순번과 같거나 큰번호는 증가				sql = "JiCmCms.updateUpPop";				query_param = new HashMap();				query_param.put("ORDER_NO_M",ibn_order_no);								update(sql, query_param);								// 수정될 순번보다 작은 번호는 변동없음			}										//  수정한다			sql = "JiCmCms.updatePop";			update(sql, param);						param.put("imenu_data_title", HtmlTag.StripStrInXss(HtmlTag.returnString((String)param.get("ibn_title"),"")));			param.put("ikey_datas", sidx);						temp_file = cmMtmDAO01.InsertFile(param);							result_map.put("result", true);			result_map.put(propertiesService.getString("RESULT_STA_KEY"),propertiesService.getString("FORWARD_SUCCESS"));			result_map.put(propertiesService.getString("RESULT_URL_R_KEY"),"Y");				}catch(JSysException q){				log.debug("throw JSysException >>>>> :  ");				throw q;				}catch(NullPointerException q){			log.debug("NullPointerException:");			throw new JSysException(super.getMessage("ji.cm.common.msg.error.save"),q);		//저장 중 오류가 발행하였습니다.		}catch(ArrayIndexOutOfBoundsException q){			log.debug("ArrayIndexOutOfBoundsException:");			throw new JSysException(super.getMessage("ji.cm.common.msg.error.save"),q);		///저장 중 오류가 발행하였습니다.		}catch(Exception q){							log.debug("JSysException Exception >>>>> :  ");				throw new JSysException(super.getMessage("ji.cm.common.msg.error.save"),q);		///저장 중 오류가 발행하였습니다.		}finally{			result_map.put(propertiesService.getString("RESULT_URL_T_KEY"),"parent");		}
		log.debug("==== updateCode : END ====");
		return result_map;	
	}		/**	* <p> ctlCMS(메인Dao컨트롤클래스)에서 해당데이터를 수정하는 메소드</p>	* Precondition : param에 해당 파라메터가 들어 있어야한다 	* 				 쿼리가 정의되어야한다	* Postcondition: 등록 결과를 받아서 리턴한다	*	* @param   param		Map		입력데이터	*	* @return  등록 결과값을 리턴한다	* @throws JSysException 	* @throws  	*/		// TODO : deletePop	public Map deletePop(Map param) throws IOException, SQLException, NullPointerException, ArrayIndexOutOfBoundsException, Exception{		log.debug("==== deletePop : START ====");		Map result_map = new HashMap();		Map query_param = new HashMap();	    Map SITE_ADM_SESSION	= (Map)param.get(propertiesService.getString("SITE_ADM_SESSION_FN"));	    String USER_ID			= HtmlTag.StripStrInXss(HtmlTag.returnString((String)SITE_ADM_SESSION.get("USER_ID"),""));	    String sidx  = HtmlTag.StripStrInXss(HtmlTag.returnString((String)param.get("sidx"),""));// 등록코드	    String ORDER_NOh = HtmlTag.StripStrInXss(HtmlTag.returnString((String)param.get("ORDER_NOh"),""));// 원래순번	    		String sql = "";			try{			// 등록자 id 셋팅			param.put("user_id", USER_ID);			// 필수 입력값체크			if(sidx.equals("")){				result_map.put("result",false);				result_map.put("TRS_MSG","필수입력값이 입력되지않았습니다");				result_map.put(propertiesService.getString("RESULT_URL_R_KEY"),"Y");				result_map.put(propertiesService.getString("RESULT_STA_KEY"),propertiesService.getString("FORWARD_FAILURE"));									//throw new JSysException("코드가 중복되었습니다.");				return result_map;							}						// 만일 정렬 순번을 수정한경우 순번값을 조정해 준다			//if(!ORDER_NOh.equals(iorder_no)){				// 원래 순번이 빠지면 원래 순번보다 큰순번의 데이터들은 -1을 해준다			sql = "JiCmCms.updateDelPop";			query_param = new HashMap();			query_param.put("ORDER_NOh",ORDER_NOh);						update(sql, query_param);						// 수정될 순번보다 작은 번호는 변동없음			//}										//  삭제한다			sql = "JiCmCms.deletePop";			param.put("sidx", sidx);			update(sql, param);			result_map.put("result", true);			result_map.put(propertiesService.getString("RESULT_STA_KEY"),propertiesService.getString("FORWARD_SUCCESS"));			result_map.put(propertiesService.getString("RESULT_URL_R_KEY"),"Y");				}catch(JSysException q){				log.debug("throw JSysException >>>>> :  ");				throw q;				}catch(NullPointerException q){			log.debug("NullPointerException:");			throw new JSysException(super.getMessage("ji.cm.common.msg.error.save"),q);		//저장 중 오류가 발행하였습니다.		}catch(ArrayIndexOutOfBoundsException q){			log.debug("ArrayIndexOutOfBoundsException:");			throw new JSysException(super.getMessage("ji.cm.common.msg.error.save"),q);		///저장 중 오류가 발행하였습니다.		}catch(Exception q){							log.debug("JSysException Exception >>>>> :  ");				throw new JSysException(super.getMessage("ji.cm.common.msg.error.save"),q);		///저장 중 오류가 발행하였습니다.		}finally{			result_map.put(propertiesService.getString("RESULT_URL_T_KEY"),"parent");		}		log.debug("==== deleteCode : END ====");		return result_map;		}	
	
}