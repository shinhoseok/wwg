package com.ji.dao.cm.oam;import java.io.IOException;import java.sql.SQLException;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;import javax.annotation.Resource;import org.apache.log4j.Logger;import org.springframework.stereotype.Repository;import com.ji.cm.CM_Util;import com.ji.dao.cm.CMDAO;import com.ji.service.CMSService;import com.ji.util.CmsDsDao;import com.ji.util.Page;import com.ji.common.HtmlTag;import com.ji.common.JSysException;import com.ji.common.Param;import egovframework.rte.fdl.property.EgovPropertyService;/**   * @Class Name : cmOamDAO01.java * @Description : cmOamDAO01 DAO Class  * @Modification Information   * @ * @  수정일      수정자              수정내용 * @ ---------   ---------   ------------------------------- * @ 2015.03.20           최초생성 *  * @author 개발프레임웍크 실행환경 개발팀 * @since 2015.03.20 * @version 1.0 * @see *  */@Repository("cmOamDAO01")public class CmOamDAO01 extends CmsDsDao {	protected Logger log = Logger.getLogger(CmOamDAO01.class); //현재 클래스 이름을 Logger에 등록	/** cmDAO */    @Resource(name="cmDAO")    private CMDAO cmDAO;        /** cmsService */    @Resource(name = "cmsService")    protected CMSService cmsService;        /** EgovPropertyService */    @Resource(name = "propertiesService")    protected EgovPropertyService propertiesService;        /**	 * 조직관리 메소드	 * @param Map	 * @return Map	 * @exception Exception	 */    // TODO : ctlCMS    @SuppressWarnings("unchecked")	public Map ctlCMS(Map param) throws IOException, SQLException, NullPointerException, ArrayIndexOutOfBoundsException, Exception {		log.debug("==== ctlCMS Start ====");		Map result_map = new HashMap();				String pstate = HtmlTag.returnString((String)param.get("pstate"),"L");		try{									if(pstate.equals("L")){				//조직 최상위 셀렉트박스				//result_map.put("org_option",bizMakeOptionOrgList(param));				//param.put("sorg_cd", "");				//param.put("sorg_jisa_cd", "");				//param.put("sorg_ty", "0");// 0:회사 1: 본부  2: 지사 3:지사소속 도서 9:해당 선택조직의 하위 조직				//result_map.put("org_option",cmDAO.bizMakeOptionList(param, "cmOamDAO.selectoptionOrgList"));					// 조직유형				result_map.put("storg_ty_cd",cmDAO.bizMakeOptionList("M00006", "")); 								// 쿼리를 통해 바로 생성할경우				//result_map.put("brnchorgcd",cmDAO.bizMakeOptionList(param, "cmOamDAO.selectoptionOrgList"));							// 조직리스트			}else if(pstate.equals("XL1")){ //ajax jqGrid data관련				result_map = selectListOrgGrid(param); 							// 등록, 수정처리			}else if(pstate.equals("C")){				result_map = insertOrg(param);								// 삭제처리			}else if(pstate.equals("D")){				result_map = deleteOrg(param);							// 조직선택팝업			}else if(pstate.equals("PF1")){						// 조직사원선택팝업			}else if(pstate.equals("PF2")){								// 조직사원선택팝업 사원리스트			}else if(pstate.equals("PX2")){ //ajax jqGrid data관련				//log.debug("==== PX2 Start ====sorg_cd:"+param.get("sorg_cd")+"::stext:"+param.get("stext"));				// 검색어가 있는경우만 조회한다				String curr_page = HtmlTag.returnString((String)param.get("curr_page"),"1");				String show_rows = HtmlTag.returnString((String)param.get("show_rows"),"10");									param.put("curr_page",curr_page);				param.put("show_rows",show_rows);				//log.debug(param.get("sauth_grp"));												param.put("sorg_cd",HtmlTag.returnString((String)param.get("seltreeorgcd"),""));				//if(!HtmlTag.returnString((String)param.get("stext"),"").equals("") || !HtmlTag.returnString((String)param.get("sorg_cd"),"").equals("")){										result_map = cmDAO.selectListGrid(param, "JiCmOam.selectOrgAdminList");					//list("JiCmOam.selectOrgAdminList", param);				//}				log.debug("==== PX2 end ====");												}else if(pstate.equals("X1")){				log.debug("==== X1 Start ====:");				result_map = selectListOrgTree(param); 							}else if(pstate.equals("X2")){				log.debug("==== ORGCD Start ====sorg_cd:"+param.get("sorg_cd"));				//param.put("sorg_cd", "0000");				param.put("sorg_jisa_cd", "");				param.put("sorg_ty", "9");// 0:회사 1: 본부  2: 지사 3:지사소속 도서 9:해당 선택조직의 하위 조직				result_map.put("optionlist",cmDAO.bizMakeOptionList(param, "cmOamDAO.selectoptionOrgList"));								//result_map.put("optionlist",bizMakeOptionOrgList(param));				log.debug("==== ORGCD End ====");							}else if(pstate.equals("X3")){				log.debug("==== X3 Start ====:");				result_map = selectListOrgTree3(param); 				log.debug("==== X3 End ====");												}else if(pstate.equals("XL2")){				log.debug("==== XL2 Start ====:");				result_map = selectListOrgTree(param); 				log.debug("==== XL2 End ====");			}		}catch(JSysException q){				log.debug("ctlCMS throw JSysException >>>>> :  ");				throw q;				}catch(NullPointerException q){			log.debug("ctlCMS NullPointerException:");			throw new JSysException(super.getMessage("ji.cm.common.msg.error.syntax"),q);		//구문오류가 발생하였습니다..		}catch(ArrayIndexOutOfBoundsException q){			log.debug("ctlCMS ArrayIndexOutOfBoundsException:");			throw new JSysException(super.getMessage("ji.cm.common.msg.error.syntax"),q);		//구문오류가 발생하였습니다		}catch(SQLException q){			log.debug("SQLException:");			throw new JSysException(super.getMessage("ji.cm.common.msg.error.syntax"),q);		//구문오류가 발생하였습니다				}catch(Exception q){			log.debug("ctlCMS Exception >>>>> :  ");				throw new JSysException(super.getMessage("ji.cm.common.msg.error.syntax"),q);		//구문오류가 발생하였습니다.			}		    	log.debug("==== ctlCMS End ====");		return result_map;    }    		/**	 * Method Name  : selectListOrgTree	 * Description  : 	* Comment      : 	* Parameter    : param - 정보가 담긴 Map 	* form History : 2015/03/23 : 이금용:  최초작성	*/	public Map selectListOrgTree (Map param) throws Exception {		//	TODO selectListOrgTree		log.debug("==== selectListOrgTree Start ====");		Map result_map = new HashMap();		int totalCount = 0;				try{	  		List rtn_list = new ArrayList();	  		rtn_list = list("JiCmOam.selectOrgTreeList", param);	  		totalCount = rtn_list.size();	  			  		List gridList = cmsService.getGridListScroll(rtn_list);	  		result_map.put("treerows",gridList);	  		result_map.put("treetotal",totalCount);							}catch(JSysException q){				log.debug("ctlCMS throw JSysException >>>>> :  ");				throw q;				}catch(NullPointerException q){			log.debug("ctlCMS NullPointerException:");			throw new JSysException(super.getMessage("ji.cm.common.msg.error.syntax"),q);		//구문오류가 발생하였습니다..		}catch(ArrayIndexOutOfBoundsException q){			log.debug("ctlCMS ArrayIndexOutOfBoundsException:");			throw new JSysException(super.getMessage("ji.cm.common.msg.error.syntax"),q);		//구문오류가 발생하였습니다		}catch(SQLException q){			log.debug("SQLException:");			throw new JSysException(super.getMessage("ji.cm.common.msg.error.syntax"),q);		//구문오류가 발생하였습니다				}catch(Exception q){			log.debug("ctlCMS Exception >>>>> :  ");				throw new JSysException(super.getMessage("ji.cm.common.msg.error.syntax"),q);		//구문오류가 발생하였습니다.			}    	log.debug("==== selectListOrgTree End ====");		return result_map;	}  		/**	 * Method Name  : selectListOrgGrid	 * Description  : 	* Comment      : 	* Parameter    : param - 정보가 담긴 Map 	* form History : 2015/03/23 : 이금용:  최초작성	*/	//	TODO selectListOrgGrid	public Map selectListOrgGrid (Map param) throws Exception {				log.debug("==== selectListOrgGrid Start ====");		Map result_map = new HashMap();				try{			result_map = cmDAO.selectListGrid(param, "JiCmOam.selectOrgList");	  		//list("JiCmOam.selectOrgList", param);					}catch(JSysException q){				log.debug("ctlCMS throw JSysException >>>>> :  ");				throw q;				}catch(NullPointerException q){			log.debug("ctlCMS NullPointerException:");			throw new JSysException(super.getMessage("ji.cm.common.msg.error.syntax"),q);		//구문오류가 발생하였습니다..		}catch(ArrayIndexOutOfBoundsException q){			log.debug("ctlCMS ArrayIndexOutOfBoundsException:");			throw new JSysException(super.getMessage("ji.cm.common.msg.error.syntax"),q);		//구문오류가 발생하였습니다		}catch(SQLException q){			log.debug("SQLException:");			throw new JSysException(super.getMessage("ji.cm.common.msg.error.syntax"),q);		//구문오류가 발생하였습니다				}catch(Exception q){			log.debug("ctlCMS Exception >>>>> :  ");				throw new JSysException(super.getMessage("ji.cm.common.msg.error.syntax"),q);		//구문오류가 발생하였습니다.			}    	log.debug("==== getGridList End ====");		return result_map;	} 			/**	* <p> ctlAB(메인Dao컨트롤클래스)에서 해당데이터를 등록하는 메소드</p>	* Precondition : param에 해당 파라메터가 들어 있어야한다 	* 				 쿼리가 정의되어야한다	* Postcondition: 등록 결과를 받아서 리턴한다	*	* @param   param		Map		입력데이터	*	* @return  등록 결과값을 리턴한다	 * @throws JSysException 	* @throws  	*/		public Map insertOrg(Map param) throws IOException, SQLException, NullPointerException, ArrayIndexOutOfBoundsException, Exception{		log.debug("==== insertOrg : START ====");		Map result_map = new HashMap();			    Map SITE_ADM_SESSION		= (Map)param.get(propertiesService.getString("SITE_ADM_SESSION_FN"));	    String USER_ID			= HtmlTag.StripStrInXss(HtmlTag.returnString((String)SITE_ADM_SESSION.get("USER_ID"),""));	    String [] iorg_option = null;		String sql = "";			String imorg_cd = HtmlTag.StripStrInXss(HtmlTag.returnString((String)param.get("imorg_cd"),""));		int iorg_seqno = Integer.parseInt(HtmlTag.StripStrInXss(HtmlTag.returnString((String)param.get("iorg_seqno"),"0")));		String ihorg_sort_no = HtmlTag.StripStrInXss(HtmlTag.returnString((String)param.get("ihorg_sort_no"),"1"));		String ihuppo_org_cd = HtmlTag.StripStrInXss(HtmlTag.returnString((String)param.get("uppo_org_cd"),""));		try{			// 등록자 id 셋팅			param.put("user_id", USER_ID);						// 조직일련번호가 없으면 등록			if(iorg_seqno==0){				//sequence 추출				iorg_seqno = cmDAO.getTableMaxSeq("JIT9110","ORG_SEQNO","");				//JIT9110_SQ = cmDAO.getSequence("JIT9110_ORG_SEQNO");					param.put("iorg_seqno", iorg_seqno+"");				//상위조직코드 셋팅				Object oorg_option = param.get("org_option");				if(oorg_option!=null){					if (oorg_option instanceof String){						//log.debug("org_option:1=================");						iorg_option = new String[1];						iorg_option[0] = HtmlTag.StripStrInXss(HtmlTag.returnString((String)param.get("org_option"),""));						//iorg_option[0] = HtmlTag.StripStrInXss(HtmlTag.returnString((String)param.get("org_option"),""));					}else if(oorg_option instanceof String []){						//log.debug("org_option:2=================");						iorg_option = (String [])param.get("org_option");					}										if(iorg_option.length==1){						if(HtmlTag.returnString(iorg_option[0],"").equals("")){							//param.put("iuppo_org_cd", HtmlTag.returnString(iorg_option[0],""));							param.put("iuppo_org_cd", "");						}else{							param.put("iuppo_org_cd", iorg_option[0]);						}					}else{						if(HtmlTag.returnString(iorg_option[iorg_option.length-1],"").equals("")){							param.put("iuppo_org_cd", iorg_option[iorg_option.length-2]);						}else{							param.put("iuppo_org_cd", iorg_option[iorg_option.length-1]);						}											}									}				sql = "JiCmOam.insertOrg";				insert(sql, param);								// 입력된 순번 이상의 순번을 +1시켜준다				sql = "JiCmOam.updateOrgSortBack";				param.put("iuppo_org_cd", HtmlTag.returnString((String)param.get("iuppo_org_cd"),""));				param.put("iorg_sort_no", HtmlTag.returnString((String)param.get("iorg_sort_no"),"1"));					update(sql, param);											// 조직일련번호가 있으면 수정			}else{				//log.debug("==== move org cd ====1:"+imorg_cd);								// 이동할 상위 조직이 있으면 기존 조직을 현재 일자-1일 기준으로 사용종료 시키고 새로 입력한다				if(!imorg_cd.equals("")){					//log.debug("==== move org cd ====1:"+imorg_cd);					// 기존 조직을  현재 일자-1일 기준으로 사용종료시킨다					sql = "JiCmOam.updateOrgUseEnd";					update(sql, param);					//log.debug("==== move org cd ====2:"+imorg_cd);					// 새로운 상위조직의 하위 조직으로 이동 저장한다					sql = "JiCmOam.insertOrgMove";						//sequence 추출					iorg_seqno = cmDAO.getTableMaxSeq("JIT9110","ORG_SEQNO","");					param.put("iorg_seqno", iorg_seqno);					param.put("iuppo_org_cd", HtmlTag.returnString(imorg_cd,""));					param.put("iorg_sort_no", "");// 이동될 순번은 새로운 조직의 하위 레벨의 마지막순번으로 추가한다					param.put("iuse_st_ymd", "");//시작일자는 현재일자로 셋팅					param.put("iuse_end_ymd", "");//종료일자는 NULL로 셋팅										insert(sql, param);					log.debug("==== move iuppo_org_cd ====3:"+imorg_cd);										// 기존상위조직에서 빠진 순번이후 순번을 앞으로 당긴다.					sql = "JiCmOam.updateOrgSortForward";					param.put("iuppo_org_cd", ihuppo_org_cd);					param.put("iorg_sort_no", HtmlTag.returnString((String)param.get("iorg_sort_no"),"1"));										update(sql, param);					//log.debug("==== move org cd ====4:"+imorg_cd);				// 그외에는 종료일자가 입력된경우 				}else{					// 종료일자가 입력된경우 해당일자로 사용종료시킨다.					if(!HtmlTag.returnString((String)param.get("iuse_end_ymd"),"").equals("")){						sql = "JiCmOam.updateOrgUseEnd";							update(sql, param);					// 종료일자가 입력되지 않은경우 해당 데이터를 수정처리한다					}else{						// 정렬순번이 변경될경우						if(ihorg_sort_no.equals(HtmlTag.returnString((String)param.get("iorg_sort_no"),"1"))){							// 원래 순번보다 큰순번을-1처리한다							sql = "JiCmOam.updateOrgSortForward";							param.put("iuppo_org_cd", HtmlTag.returnString((String)param.get("iuppo_org_cd"),""));							param.put("iorg_sort_no", ihorg_sort_no);														update(sql, param);														// 변경될 순번 이후 순번을+1처리한다							sql = "JiCmOam.updateOrgSortBack";							param.put("iuppo_org_cd", HtmlTag.returnString((String)param.get("iuppo_org_cd"),""));							param.put("iorg_sort_no", HtmlTag.returnString((String)param.get("iorg_sort_no"),"1"));								update(sql, param);						}												// 변경될 순번으로 데이터를 수정한다						sql = "JiCmOam.updateOrg";						update(sql, param);											}				}			}						result_map.put("result", true);			result_map.put(propertiesService.getString("RESULT_STA_KEY"),propertiesService.getString("FORWARD_SUCCESS"));			result_map.put(propertiesService.getString("RESULT_URL_R_KEY"),"Y");				}catch(JSysException q){				log.debug("throw JSysException >>>>> :  ");				throw q;				}catch(NullPointerException q){			log.debug("NullPointerException:");			throw new JSysException(super.getMessage("ji.cm.common.msg.error.save"),q);		//저장 중 오류가 발행하였습니다.		}catch(ArrayIndexOutOfBoundsException q){			log.debug("ArrayIndexOutOfBoundsException:");			throw new JSysException(super.getMessage("ji.cm.common.msg.error.save"),q);		///저장 중 오류가 발행하였습니다.		}catch(Exception q){							log.debug("JSysException Exception >>>>> :  ");				throw new JSysException(super.getMessage("ji.cm.common.msg.error.save"),q);		///저장 중 오류가 발행하였습니다.		}finally{			result_map.put(propertiesService.getString("RESULT_URL_T_KEY"),"parent");		}		log.debug("==== insertOrg : END ====");		return result_map;		}			/**	* <p> ctlAB(메인Dao컨트롤클래스)에서 해당데이터를 등록하는 메소드</p>	* Precondition : param에 해당 파라메터가 들어 있어야한다 	* 				 쿼리가 정의되어야한다	* Postcondition: 등록 결과를 받아서 리턴한다	*	* @param   param		Map		입력데이터	*	* @return  등록 결과값을 리턴한다	 * @throws JSysException 	* @throws  	*/		public Map deleteOrg(Map param) throws IOException, SQLException, NullPointerException, ArrayIndexOutOfBoundsException, Exception{		log.debug("==== deleteOrg : START ====");		Map result_map = new HashMap();			    Map SITE_ADM_SESSION		= (Map)param.get(propertiesService.getString("SITE_ADM_SESSION_FN"));	    String USER_ID			= HtmlTag.StripStrInXss(HtmlTag.returnString((String)SITE_ADM_SESSION.get("USER_ID"),""));		String sql = "";			String iorg_cd = HtmlTag.StripStrInXss(HtmlTag.returnString((String)param.get("iorg_cd"),""));		int iorg_seqno = Integer.parseInt(HtmlTag.StripStrInXss(HtmlTag.returnString((String)param.get("iorg_seqno"),"0")));		try{			// 등록자 id 셋팅			param.put("user_id", USER_ID);			if(iorg_cd.equals("") || iorg_seqno==0){				throw new JSysException("필수입력항목이 정확하지 않습니다.");			}			// 해당조직의 하위조직을 모두 삭제한다			sql = "JiCmOam.deleteOrg";			update(sql, param);						result_map.put("result", true);			result_map.put(propertiesService.getString("RESULT_STA_KEY"),propertiesService.getString("FORWARD_SUCCESS"));			result_map.put(propertiesService.getString("RESULT_URL_R_KEY"),"Y");				}catch(JSysException q){				log.debug("throw JSysException >>>>> :  ");				throw q;				}catch(NullPointerException q){			log.debug("NullPointerException:");			throw new JSysException(super.getMessage("ji.cm.common.msg.error.save"),q);		//저장 중 오류가 발행하였습니다.		}catch(ArrayIndexOutOfBoundsException q){			log.debug("ArrayIndexOutOfBoundsException:");			throw new JSysException(super.getMessage("ji.cm.common.msg.error.save"),q);		///저장 중 오류가 발행하였습니다.		}catch(Exception q){							log.debug("JSysException Exception >>>>> :  ");				throw new JSysException(super.getMessage("ji.cm.common.msg.error.save"),q);		///저장 중 오류가 발행하였습니다.		}finally{			result_map.put(propertiesService.getString("RESULT_URL_T_KEY"),"parent");		}		log.debug("==== insertOrg : END ====");		return result_map;		}			/**	 * Method Name  : selectListOrgTree	 * Description  : 	* Comment      : 	* Parameter    : param - 정보가 담긴 Map 	* form History : 2015/03/23 : 이금용:  최초작성	*/	public Map selectListOrgTree3 (Map param) throws Exception {		//	TODO selectListOrgTree3		log.debug("==== selectListOrgTree3 Start ====");		Map result_map = new HashMap();		int totalCount = 0;				try{	  		List rtn_list = new ArrayList();	  		rtn_list = list("JiCmOam.selectOrgTreeList3", param);	  		totalCount = rtn_list.size();	  			  		List gridList = cmsService.getGridListScroll(rtn_list);	  		result_map.put("treerows",gridList);	  		result_map.put("treetotal",totalCount);							}catch(JSysException q){				log.debug("ctlCMS throw JSysException >>>>> :  "+q);				throw q;				}catch(NullPointerException q){			log.debug("ctlCMS NullPointerException:"+q);			throw new JSysException(super.getMessage("ji.cm.common.msg.error.syntax"),q);		//구문오류가 발생하였습니다..		}catch(ArrayIndexOutOfBoundsException q){			log.debug("ctlCMS ArrayIndexOutOfBoundsException:"+q);			throw new JSysException(super.getMessage("ji.cm.common.msg.error.syntax"),q);		//구문오류가 발생하였습니다		}catch(SQLException q){			log.debug("SQLException:"+q);			throw new JSysException(super.getMessage("ji.cm.common.msg.error.syntax"),q);		//구문오류가 발생하였습니다				}catch(Exception q){			log.debug("ctlCMS Exception >>>>> :  "+q);				throw new JSysException(super.getMessage("ji.cm.common.msg.error.syntax"),q);		//구문오류가 발생하였습니다.			}finally{		}    	log.debug("==== selectListOrgTree3 End ====");		return result_map;	}}