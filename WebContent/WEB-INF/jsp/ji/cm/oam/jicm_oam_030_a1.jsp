<%--/*=================================================================================*//* 시스템            : JRCMS 시스템 SYSTEM/* 프로그램 아이디   : /WEB-INF/jsp/ji/cm/oam/jicm_oam_030_a1/* 프로그램 이름     : jicm_oam_030_a1  /* 소스파일 이름     : jicm_oam_030_a1.jsp/* 설명              : 권한관리 등록페이지/* 버전              : 1.0.0/* 최초 작성자       : 이금용/* 최초 작성일자     : 2016-11-07/* 최근 수정자       : 이금용/* 최근 수정일시     : 2016-11-07/* 최종 수정내용     : 최초작성/*=================================================================================*/--%><%@page pageEncoding="utf-8"%><script language="javascript" src="<%=con_root%>/js/com-tree.js"></script><script type="text/javascript">// 조직트리var searchYn = false;var searchYn2 = false;//TODO : $(function()$(function(){	var cmtreeval = new Array();	//init tree	$.fn.cmtree({		 id			: '#cmtree_data' 		 ,treeAreaId : "#treeArea"		 ,treeMenuId : "#treeMenu"		 ,treeHeight : ($("#content").height())+"px"		 ,treeWidth  : "200px"		 ,treemHeight : ($("#content").height()-40)+"px"		 ,treemWidth : "160px"	 		 ,checkBoxYn: true		 ,treeArr   : cmtreeval		 ,onClickTitlefn: ""		 ,onClickCheckedfn:"treeClickChecked01"		 ,treeRelComboId : ""		 ,treeRelComboboxId : ""		 ,treeImgPath : "<%=img_url%>"	});				//메뉴 리스트	var cols =[{label:'번호'				,name:'row_seqno'			,index:'row_seqno'			,align:'center'		,width:'60'		,hidden:false	,sortable:false}			   ,{label:'메뉴 명'			,   name:'menu_nm'          ,index:'menu_nm'			,align:'center'		,width:'100'	,hidden:false	,sortable:false , formatter : fm_menu_nm}          			   ,{label:'메뉴코드'			,   name:'menu_cd'          ,index:'menu_cd'			,align:'center'		,width:'100'	,hidden:false	,sortable:false }			   ,{label:'메뉴전체 경로'		,   name:'m_nms'    		,index:'m_nms'				,align:'left'		,width:'300'	,hidden:false	,sortable:false, formatter : fm_m_nms   , unformat: getInputFormat}			   ,{label:'메뉴전체 경로코드'		,   name:'m_codes'    		,index:'m_codes'			,align:'left'		,width:'300'	,hidden:true	,sortable:false}	           ,{label:'key'			,   name:'menu_seqno'		,index:'menu_seqno'			,align:'center'  	,width:'0'  	,hidden:true  	,sortable:false}	           ,{label:'key'			,   name:'idx'				,index:'idx'				,align:'center'  	,width:'0'  	,hidden:true  	,sortable:false}		    ];		//init grid	var grid = com.grid.init({		 id			: '#jqGrid' 		,viewrecords: true		,height		: 200		,rowNum		: 1000		,rowList	: 1000		,shrinkToFit: true // 컬럼이 그리드 width에 맞춰 자동으로 맞춰질지 여부		,autowidth : true		,multiselect: true		,viewrecords: true		//,rownumbers  : true 	//Row number 표시		,scroll : 1		,ajaxGridOptions: { contentType: "application/json;charset=utf-8" }		,gridComplete: function(){			mergeCellcomplet($(this));			grid_win_resizeAuto();		}		,loadComplete: function(data){			// 로드 데이타 갯수 체크			if(searchYn){				if(data.rows.length > 0){					//alert(data.rows.length);					var tree_set_arr = new Array();					for(var si=0;si<data.rows.length;si++){						tree_set_arr[si] = data.rows[si].menu_cd;											}					$.fn.cmtree.chkedTreeArr(tree_set_arr);				}							}						}			,onSelectRow: function(id) { // row를 선택했을때 액션.				}		,ondblClickRow: function(id) { // row를 선택했을때 액션.					var ret = $("#jqGrid").jqGrid("getRowData",id); // ret는 선택한 row 값을 쥐고있는 객체다.		}		,custom : { //custom			 cols : cols //컬럼정보 - 필수!			,navButton : {				excel : {					exportName	: $('.con_title>h3').text().trim() //엑셀다운로드시 사용할 파일명				}			}		}	});		//사용자 리스트	var cols2 =[{label:'번호'				,name:'row_seqno'			,index:'row_seqno'			,align:'center'		,width:'60'		,hidden:false	,sortable:false}			   ,{label:'사용자 명'			,   name:'user_nm'          ,index:'user_nm'			,align:'center'		,width:'100'	,hidden:false	,sortable:false }          			   ,{label:'사용자 ID'			,   name:'user_id'          ,index:'user_id'			,align:'center'		,width:'100'	,hidden:false	,sortable:false }			   ,{label:'최상위조직명'		,   name:'emp_top_org_nm'   ,index:'emp_top_org_nm'		,align:'center'		,width:'150'	,hidden:false	,sortable:false }	           ,{label:'부서명'			,   name:'org_nm'           ,index:'org_nm'             ,align:'center'		,width:'150'	,hidden:false	,sortable:false }	           ,{label:'key'			,   name:'user_seqno'		,index:'user_seqno'			,align:'center'  	,width:'0'  	,hidden:true  	,sortable:false}	           ,{label:'key'			,   name:'idx'				,index:'idx'			,align:'center'  	,width:'0'  	,hidden:true  	,sortable:false}		    ];	//init grid	var grid2 = com.grid.init({		 id			: '#jqGrid2' 		,height		: 200		,rowNum		: 1000		,rowList	: 1000		,shrinkToFit: true // 컬럼이 그리드 width에 맞춰 자동으로 맞춰질지 여부		,autowidth : true		,multiselect: true		,viewrecords: true		//,rownumbers  : true 	//Row number 표시		,scroll : 1		,ajaxGridOptions: { contentType: "application/json;charset=utf-8" }		,gridComplete: function(){			mergeCellcomplet($(this));			grid_win_resizeAuto();		}		,loadComplete: function(data){						}			,onSelectRow: function(id) { // row를 선택했을때 액션.				}		,ondblClickRow: function(id) { // row를 선택했을때 액션.					var ret = $("#jqGrid2").jqGrid("getRowData",id); // ret는 선택한 row 값을 쥐고있는 객체다.		}		,custom : { //custom			 cols : cols2 //컬럼정보 - 필수!			,navButton : {				excel : {					exportName	: $('.con_title>h3').text().trim() //엑셀다운로드시 사용할 파일명				}			}		}	});			//목록 이동		$("#btn_list").click(function(e){						  su_form=document.cffrm;			  su_form.method='post';			  su_form.pstate.value='L';			  su_form.action='<%=RequestURL%>';			  su_form.submit();			  su_form.target = "";		});				//저장		$("#btn_save").click(function(e){			         			var field = ["row_seqno","menu_nm","menu_cd","m_nms","m_codes","menu_seqno","idx"]; //grid 내 element id			var field2 = ["row_seqno","user_nm","user_id","emp_top_org_nm","org_nm","user_seqno","idx"]; //grid 내 element id						if(!validation("cffrm")) return false; //필수 체크						// 권한그룹명			if(isEmpty($('input[name=auth_grp_nm]').val()) ){				alert("권한그룹명을 입력해주세요");				$('input[name=auth_grp_nm]').focus();				return;						}else{				if($('input[name=auth_grp_nm]').val().length > 200){					alert("권한그룹명은 100자리까지만 입력되어야합니다.");					$('input[name=auth_grp_nm]').focus();					return;				}								}						if(jQuery('#jqGrid').jqGrid('getGridParam', 'reccount') < 1){				alert("권한그룹 세부메뉴를 선택해주세요");				return;			}						if(jQuery('#jqGrid2').jqGrid('getGridParam', 'reccount') < 1){				alert("권한그룹 사용자를 선택해주세요");				return;			}						// 등록이면			if(isEmpty($("#sauth_grp_seqno").val()) ){				$("#pstate").val("C");			// 수정이면			}else{				$("#pstate").val("U");			}			   			   // 그리드의 데이터를 json데이터로 생성한다			   $("#JSONDataList").val(JSONDataList("jqGrid",field));			   $("#JSONDataList2").val(JSONDataList("jqGrid2",field2));			   			   //console.log("JSONDataList::==>"+$("#JSONDataList").val());			   //console.log("JSONDataList2::==>"+$("#JSONDataList2").val());			   //return;				var params = jQuery("#cffrm").serialize();				CmopenLoading();					 $.ajax({			             type: "post",			             url: "<c:url value='/cmsajax.do'/>",			             data: params,			             async: false,			             dataType:"json",			             timeout: 3000,			             error: function (jqXHR, textStatus, errorThrown) {			                 // 통신에 에러가 있을경우 처리할 내용(생략가능)			    	        	alert("네트웍장애가 발생했습니다. 다시시도해주세요");			    	        	CmcloseLoading();            			             },			             			             success: function(data){			               if(data.result==true){				       			// 등록이면				       			if(isEmpty($("#sauth_grp_seqno").val()) ){				       				alert('저장 되었습니다.');				                	$("#btn_list").trigger("click");				       			// 수정이면				       			}else{				       				alert('수정 되었습니다.');				                	pageReload();				       			}			            	   			                				               }else{			            	   	alert(data.TRS_MSG);			            	   	CmcloseLoading();			               }			               			             }			             /*,					     error:function(request, status, error) {					    	 CmcloseLoading();					    	 alert('저장 중 오류가 발생했습니다.');			             }*/			             			             			 			      });		});					//삭제		$("#btn_delete").click(function(e){				if(confirm("권한그룹을 삭제하시겠습니까?")){				}else{					return;				}				 				$("#pstate").val("D");			   			   // 그리드의 데이터를 json데이터로 생성한다			   $("#JSONDataList").val("");			   $("#JSONDataList2").val("");				   $("#delkey").val("");			   $("#delkey2").val("");				var params = jQuery("#cffrm").serialize();				CmopenLoading();					 $.ajax({			             type: "post",			             url: "<c:url value='/cmsajax.do'/>",			             data: params,			             async: false,			             dataType:"json",			             timeout: 3000,			             error: function (jqXHR, textStatus, errorThrown) {			                 // 통신에 에러가 있을경우 처리할 내용(생략가능)			    	        	alert("네트웍장애가 발생했습니다. 다시시도해주세요");			    	        	CmcloseLoading();            			             },			             			             success: function(data){			               if(data.result==true){				       			alert('삭제 되었습니다.');				                $("#btn_list").trigger("click");			               }else{			            	   	alert(data.TRS_MSG);			            	   	CmcloseLoading();			               }			               			             }			             /*,					     error:function(request, status, error) {					    	 CmcloseLoading();					    	 alert('저장 중 오류가 발생했습니다.');			             }*/			 			      });		});						//메뉴추가		$("#btn_menu_add").click(function(e){			var checked_menu = new Array();			checked_menu = $.fn.cmtree.chkTreeArr();			var i =0;			var j =0;			// $("#tree_chk_000002").parent("li").children("a").text();						if(checked_menu.length==0){				alert('추가할 메뉴를 선택하세요');				return;			}			for(i =0;i<checked_menu.length;i++){				var ids = jQuery("#jqGrid").jqGrid('getDataIDs');				var addCnt  = 0;				var chkCnt  = 0;				//console.log("aa--"+i+"---"+checked_menu[i][1]);				for(j=0;j < ids.length;j++) {					addCnt = ids[j];					addCnt = addCnt.replace('jqg', '');					//console.log("bb--"+i+"---"+j+"---"+checked_menu[i][6]+"----"+$("#jqGrid").jqGrid('getCell', ids[j],'menu_cd'));					if(checked_menu[i][6].indexOf($("#jqGrid").jqGrid('getCell', ids[j],'menu_cd')) > -1){						chkCnt++;					}				}								if(chkCnt == 0){			 		addCnt = parseInt(addCnt)+1;					//var m_nms_str = StrreplaceAll (checked_menu[i][5], '::', ' > ');			 		var targetData = "";				 		targetData = { 				 						row_seqno        :''				                 	  	,menu_nm        :checked_menu[i][2]				 					  	,menu_cd        :checked_menu[i][1]				                 	  	,menu_seqno   	:checked_menu[i][0]				 						,m_nms   		:checked_menu[i][5]				 						,m_codes   		:checked_menu[i][6]				 						,idx			:''				 		}				 		jQuery("#jqGrid").jqGrid('addRowData',addCnt,targetData);									}			}		});						//메뉴삭제		$("#btn_menu_remove").click(function(e){		  	var value = "";		  	var ids = jQuery('#jqGrid').jqGrid('getGridParam', 'selarrrow');		  				var delkey_val = "";			var delkey_col_row = "";			var delkey_col="idx";			var org_delkey = "";					    if(ids.length==0){		    	alert('삭제할 메뉴을 선택하세요');		    	return;		    }		    		    		    for(i=0;i<ids.length;i++){		    	delkey_val = $("#jqGrid").jqGrid('getCell', ids[i], delkey_col);		    	delkey_col_row = $("#jqGrid").jqGrid('getCell', ids[i], 'row_seqno');		    	console.log("delkey_col_row:=="+delkey_col_row+"::delkey_val:=="+delkey_val);		    	if(delkey_col_row!="" && delkey_val!=""){		    		org_delkey+= (org_delkey==""?"":",")+delkey_val; 		    		//alert($("#jqGrid").jqGrid('getCell', ids[i], 'menu_cd'));		    		var del_menu = $.fn.cmtree.rtnTreeArr($("#jqGrid").jqGrid('getCell', ids[i], 'menu_cd'));		    		$.fn.cmtree.unchkTreeParentAll(del_menu[1], del_menu[4]);		    	}		    }		    		    for( var i=ids.length; i>0; i-- ){		       $('#jqGrid').jqGrid('delRowData', ids[i-1])		    }		    		    $("#delkey").val(org_delkey);		});					//사용자 추가		$("#btn_user_add").click(function(e){			popWin("<c:url value='/cmsmain.do'/>?scode=000008&pcode=000038&dto_FUN_FN=setOrgSawonAdd&pstate=PF2&multi_yn=Y&check_yn=N", "orgSawonWinPop", 720, 710);			//popWinScroll("<c:url value='/cmsmain.do'/>?scode=000008&pcode=000038&dto_FUN_FN=setOrgSawonAdd&pstate=PF2&multi_yn=Y&check_yn=N", "orgSawonWinPop", 720, 680);		});						//사용자 삭제		$("#btn_user_remove").click(function(e){		  	var value = "";		  	var ids = jQuery('#jqGrid2').jqGrid('getGridParam', 'selarrrow');		  				var delkey_val = "";			var delkey_col_row = "";			var delkey_col="idx";			var org_delkey = "";					    for(i=0;i<ids.length;i++){		    	delkey_val = $("#jqGrid2").jqGrid('getCell', ids[i], delkey_col);		    	delkey_col_row = $("#jqGrid2").jqGrid('getCell', ids[i], 'row_seqno');		    	//console.log("delkey_col_row:=="+delkey_col_row+"::delkey_val:=="+delkey_val);		    	if(delkey_col_row!="" && delkey_val!=""){		    		org_delkey+= (org_delkey==""?"":",")+delkey_val; 		    	}		    }		    		    if(ids.length==0){		    	alert('삭제할 사용자를 선택하세요');		    	return;		    }		    		    for( var i=ids.length; i>0; i-- ){		       $('#jqGrid2').jqGrid('delRowData', ids[i-1])		    }		    		    $("#delkey2").val(org_delkey);		});							CmopenLoading();		refreshTree();//트리조회		<%		// 수정모드이면 값을 셋팅한다		if(!HtmlTag.returnString((String)viewMap.get("auth_grp_seqno"),"").equals("")){		%>		refreshGrid();		refreshGrid2();		<%		}		%>						CmcloseLoading();});//Grid 데이터 json 데이터로 반환function JSONDataList(jqGrid,field) {	var colModel = $("#"+jqGrid).jqGrid('getGridParam','colModel');	var arrObj = new Array();	var ids = jQuery("#"+jqGrid).jqGrid('getDataIDs');	var _value ="";	var _type ="";    for ( var i=0; i<ids.length; i++ ) {        var vo = new Object();          for(var j=1;j<colModel.length;j++){        	if(colModel[j].name!=""){        		        		//_value = $("#"+field[j-1]+[i+1]).val();        	//$(":input "+field[j-1]+")         		_value = $("#"+jqGrid+" :input[name="+field[j-1]+"]:eq("+i+")").val();        		_type = $("#"+jqGrid+" :input[name="+field[j-1]+"]:eq("+i+")").attr("type");        		//console.log(_type);        		if(_type=="radio"){        			if($("#"+jqGrid+" input:radio[id="+field[j-1]+[i+1]+"]").is(":checked")){        				_value = "Y"        				eval("vo."+colModel[j].name+"=\""+_value+"\"");        			}else{        				_value = "N"        				eval("vo."+colModel[j].name+"=\""+_value+"\"");        			}        		}else{	        		//console.log(colModel[j].name+"      =         " +$("#"+field[j-1]+[i+1]).val()+"        field[j]       "+field[j-1]);	        		if(_value==undefined){	        			eval("vo."+colModel[j].name+"=\"\"");		        		}else{	        			eval("vo."+colModel[j].name+"=\""+_value+"\"");	        		}        		}        		//console.log("vo."+colModel[j].name+"=\""+_value+"\"");        	}        }        arrObj.push(vo);       }    return JSON.stringify(arrObj);}//조회 : 트리조회//TODO : refreshTreefunction refreshTree(){			//alert('refreshTree');	$("#pstate").val("XL2");	var params =  $("form[name=cffrm]").serialize();	//var params = jQuery('form').serialize();	//var params = com.frm.getParamJSON(document.listfrm);	//alert(params);	$.fn.cmtree.reload('#cmtree_data','<c:url value='/cmsajax.do'/>',params);	}//TODO : treeClickTitle01function treeClickTitle01(rtnArr){	$.fn.cmtree.selTreeParentAll(rtnArr[1], rtnArr[4]);//조직트리 해당 조직으로 선택}//TODO : treeClickChecked01function treeClickChecked01(rtnArr){	//alert(rtnArr[1]+"---"+rtnArr[4]);	//0: TREE_SEQ, 1: TREE_CD, 2: TREE_NM, 3:TREE_UPPO_CD, 4: TREE_LEVEL, 5: TREE_NMS, 6: TREE_CDS, 7: TREE_SUB_CNT	//$.fn.cmtree.selTreeParentAll2(rtnArr[1]);//조직트리 해당 조직으로 선택	$.fn.cmtree.unchkTreeParentAll2(rtnArr[1], rtnArr[4]);	$.fn.cmtree.unchkTreeChildrenAll(rtnArr[1]);}	//TODO : setOrgSawonAdd//조직사원 검색팝업 리턴값 셋팅function setOrgSawonAdd(rtnArr){	//rtnArr[0]//직원아이디	//rtnArr[1]//직원명	//rtnArr[2]//최상위조직명	//rtnArr[3]//조직명	//rtnArr[4]//조직코드	//rtnArr[5]//returnId	//rtnArr[6]//조직유형코드	//rtnArr[7]//조직유형명	//rtnArr[8]//상위조직코드	//rtnArr[9]//최상위 조직코드	var ri =0;	var rj =0;	//var set_str1="";	//var set_str2="";	for(ri=0;ri<rtnArr[0].length;ri++){		//set_str1=set_str1+rtnArr[ri][1];		//set_str2=set_str2+rtnArr[ri][2];		var ids = jQuery("#jqGrid2").jqGrid('getDataIDs');		var addCnt  = 0;		var chkCnt  = 0;		//console.log("aa--"+i+"---"+checked_menu[i][1]);		for(rj=0;rj < ids.length;rj++) {			addCnt = ids[rj];			addCnt = addCnt.replace('jqg', '');			//console.log("bb--"+i+"---"+j+"---"+checked_menu[i][6]+"----"+$("#jqGrid").jqGrid('getCell', ids[j],'menu_cd'));			if(rtnArr[0][ri].indexOf($("#jqGrid2").jqGrid('getCell', ids[rj],'user_id')) > -1){				chkCnt++;			}		}				if(chkCnt == 0){	 		addCnt = parseInt(addCnt)+1;	 		var targetData = "";		 		targetData = { 		 						row_seqno        :''		                 	  	,user_nm        :rtnArr[1][ri]		 					  	,user_id        :rtnArr[0][ri]		                 	  	,emp_top_org_nm	:rtnArr[2][ri]		 						,org_nm   		:rtnArr[3][ri]		 						,user_seqno   	:''		 						,idx			:''		 		}		 		jQuery("#jqGrid2").jqGrid('addRowData',addCnt,targetData);							}	}	}	//Grid 데이터 json 데이터로 반환function JSONDataList(jqGrid,field) {	var colModel = $("#"+jqGrid).jqGrid('getGridParam','colModel');	var arrObj = new Array();	var ids = jQuery("#"+jqGrid).jqGrid('getDataIDs');	var _value ="";	var _type ="";    for ( var i=0; i<ids.length; i++ ) {        var vo = new Object();          for(var j=0;j<field.length;j++){        	//console.log("i:="+i+":j:="+j+":ids:"+ids[i]+":"+field[j]+":tagName:="+$("#"+jqGrid+"_"+field[j]).prop("tagName")+":ch_length:="+$("#"+jqGrid+"_"+field[j]).children().length);        	//console.log("i:="+i+":j:="+j+":ids:"+ids[i]+":"+field[j]+":cellval:="+$("#"+jqGrid).jqGrid('getCell', ids[i], field[j])+":===:"+$("#"+field[j]+ids[i]).val());        	if($("#"+jqGrid).find("#"+field[j]+ids[i]).val()!=undefined){        		        		_value = $("#"+jqGrid).find("#"+field[j]+ids[i]).val();        		_type  = $("#"+jqGrid).find("#"+field[j]+ids[i]).attr("type");        		        	}else{        		//console.log($("#"+jqGrid).find("#"+field[j]+ids[i]).prop("tagName"));        		//멀티플 셀렉트인경우 셀렉트항목을 선택안하면 값이 없음 따라서 value를 직접셋팅해준다        		if($("#"+jqGrid).find("#"+field[j]+ids[i]).prop("tagName")=="SELECT"){        			_value = $("#"+jqGrid).find("#"+field[j]+ids[i]).val();        		}else{        			_value = $("#"+jqGrid).jqGrid('getCell', ids[i], field[j]);        		}        		        		_type  = "string";         		        	}        	        	if(_value!=""){            	if(_value.indexOf("'") > -1){            		//_value = htmlSpclCharsDecode(value);            		_value = StrreplaceAll(_value,"'","&#39;");            	}         		        	}        	        	    		if(_type=="radio"){    			//console.log("field["+j+"]:=="+field[j]+"::ids["+i+"]:==="+ids[i]+":=="+$("#"+jqGrid+" input:radio[id="+field[j]+ids[i]+"]").is(":checked"));    			if($("#"+jqGrid+" input:radio[id="+field[j]+ids[i]+"]").is(":checked")){    				$("#"+jqGrid+" input:radio[id="+field[j]+ids[i]+"]").each(function(){    					if($(this).is(":checked")){    						_value = $(this).val();    					}    				});    				    					eval("vo."+field[j]+"='"+_value+"';");    			}else{    				_value = "";    					eval("vo."+field[j]+"='"+_value+"';");    			}    		}else if(_type=="checkbox"){    			//console.log("field["+j+"]:=="+field[j]);    		}else{    				    		if(_value==undefined){	    			eval("vo."+field[j]+"='';");		    		}else{	    			eval("vo."+field[j]+"='"+_value+"';");	    		}     		}        	        	         }        arrObj.push(vo);       }    return JSON.stringify(arrObj);}//TODO : refreshGrid//조회 : 그리드 조회//TODO : refreshGridfunction refreshGrid(isNotCheckVal){	var _frm = document.cffrm;	_frm.action='<%=RequestURL%>';		searchYn = true;		var params = getGridParamDatas();	//alert("subinYn==>"+params.subinYn);	com.grid.reload('#jqGrid','<c:url value='/cmsajax.do'/>',params);}//TODO : getGridParamDatas//그리드 조회시 요청할 파라미터 objectfunction getGridParamDatas(){	var _params = com.frm.getParamJSON(document.cffrm);	_params.pstate = 'XL3';	return _params;}//TODO : refreshGrid2function refreshGrid2(isNotCheckVal){	var _frm = document.cffrm;	_frm.action='<%=RequestURL%>';		searchYn2 = true;		var params = getGridParamDatas2();	//alert("subinYn==>"+params.subinYn);	com.grid.reload('#jqGrid2','<c:url value='/cmsajax.do'/>',params);}//TODO : getGridParamDatas2//그리드 조회시 요청할 파라미터 objectfunction getGridParamDatas2(){	var _params = com.frm.getParamJSON(document.cffrm);	_params.pstate = 'XL4';	return _params;}//TODO : pageReloadfunction pageReload(){	  su_form=document.cffrm;	  su_form.method='post';	  su_form.pstate.value='UF';	  su_form.action='<%=RequestURL%>';	  su_form.submit();	  su_form.target = "";	}//TODO : fm_menu_nmfunction fm_menu_nm(cellvalue, options, rowObject){	//var rowId = options.rowId;	var cell_fm_str = "";	//console.log(cellvalue);	if (cellvalue != undefined && cellvalue != null && cellvalue != '') {		cell_fm_str = cellvalue.replace(/&amp;amp;/gi,"&");	}	return cell_fm_str;}//TODO : fm_m_nmsfunction fm_m_nms(cellvalue, options, rowObject){	//var rowId = options.rowId;	var cell_fm_str = "";	if (cellvalue != undefined && cellvalue != null && cellvalue != '') {		cell_fm_str = cellvalue.replace(/&amp;amp;/gi,"&");		cell_fm_str = StrreplaceAll (cell_fm_str, '::', ' > ');	}	return cell_fm_str;}//TODO : getInputFormatfunction getInputFormat(cellvalue, options, rowObject) {	//return $('input', rowObject).val();	return cellvalue;}</script><form name="cffrm" id="cffrm" method="post" onSubmit='return false;Go_search();' >        <input type="hidden" name="scode" id="scode" value="<%=scode%>" title="사이트코드" /><input type="hidden" name="pcode" id="pcode" value="<%=pcode%>" title="페이지코드"  /><input type="hidden" name="pstate" id="pstate" value="<%=pstate%>" title="페이지상태"  /><input type="hidden" name="curr_page" id="curr_page" value="<%=curr_page%>" title="현재페이지번호"  /><input type="hidden" name="show_rows" id="show_rows" value="<%=show_rows%>" title="현재페이지당데이터수"  /><input type="hidden" name="sidx" value="" title="선택된인덱스" /><input type="hidden" name="used" id="used" value="" /><input type="hidden" name="delkey" id="delkey" value="" /><input type="hidden" name="delkey2" id="delkey2" value="" /><input type="hidden" name="sauth_grp_cd" id="sauth_grp_cd" value="<%=HtmlTag.returnString((String)viewMap.get("auth_grp_cd"),"") %>" /><input type="hidden" name="sauth_grp_seqno" id="sauth_grp_seqno" value="<%=HtmlTag.returnString((String)viewMap.get("auth_grp_seqno"),"") %>" /><input type="hidden" name="JSONDataList" id="JSONDataList" /><input type="hidden" name="JSONDataList2" id="JSONDataList2" />	  <div class="sectionBlue">	<!-- 트리 영역 -->	<div class="treeArea" id="treeArea">		<p class="tit round fL"><a href="#none;" >메뉴목록</a>		</p>		<div class="treeMenu round fL mR10" id="treeMenu">			<ul id="cmtree_data">			</ul>		</div>	</div>	<!-- 트리 영역 // -->   	<div class="searchArea">    <table class="defaultTable02">      <colgroup>      <col width="12%" />      <col width="20%" />      <col width="12%" />      <col width="20%" />      <col width="12%" />      <col width="*" />      </colgroup>            <tr>        <th scope="row">권한그룹 명<span class="pOrg">*</span></th>		<%		// 수정모드이면 값을 셋팅한다		if(!HtmlTag.returnString((String)viewMap.get("auth_grp_seqno"),"").equals("")){		%>        <td colspan="2">            <input type="text" name="auth_grp_nm" id="auth_grp_nm" maxlength="200" title="" class="fL in" value="<%=HtmlTag.returnString((String)viewMap.get("auth_grp_nm"),"").replaceAll("&amp;amp;","&") %>" style="width:90%" />       </td>       <th scope="row">권한그룹 코드<span class="pOrg"></span></th>	        <td colspan="2">            <%=HtmlTag.returnString((String)viewMap.get("auth_grp_cd"),"") %>       </td>       			<%		}else{		%>         <td colspan="5">            <input type="text" name="auth_grp_nm" id="auth_grp_nm" maxlength="200" title="" class="fL in" value="<%=HtmlTag.returnString((String)viewMap.get("auth_grp_nm"),"") %>" style="width:90%" />       </td>				<%		}		%>                                        </tr>            <tr>      <th scope="row">권한그룹 비고</th>        <td colspan="5">            <input type="text" name="auth_grp_desc" id="auth_grp_desc"  maxlength="500" title="" class="fL" value="<%=HtmlTag.returnString((String)viewMap.get("auth_grp_desc"),"").replaceAll("&amp;amp;","&") %>" style="width:90%" />       </td>           </tr>                 </table>    </div>    	<div class="treeArea" style="width:22px;margin-top:40px;">	 <div class="section">	    <a href='#' id="btn_menu_add"><img src="<%=img_adm_url %>/icon_right.gif" alt="오른쪽"></a>	 </div>	 <br />	 <div class="section">	             <a href='#' id="btn_menu_remove"><img src="<%=img_adm_url %>/icon_left.gif" alt="왼쪽"></a>	 </div>		</div>    	   <div class="section mT5">		      <h3 class="fL "><span>&#8226;</span>권한그룹 세부메뉴</h3>		      <p class="fR mB5">				 <span class="btn_pack largeG" id="btn_list"><a href="#">목록</a></span>				 <span class="btn_pack large" id="btn_save"><a href="#" >저장</a></span>				<%				// 수정모드이면 삭제버튼을 보여준다				if(!HtmlTag.returnString((String)viewMap.get("auth_grp_seqno"),"").equals("")){				%>					 <span class="btn_pack large" id="btn_delete"><a href="#" >삭제</a></span>				<%				}				%>			 		      </p>	    </div> 	    <div class="section" id="jqGridDiv">   	    	<table id='jqGrid' minuswh="245" fixwidth="N"></table>	    </div>	        	   <div class="section mT5" >		      <h3 class="fL "><span>&#8226;</span>권한그룹 사용자</h3>		      <p class="fR mB5">	         	<span class="btn_pack medium icon" id="btn_user_add"><span class="add"></span><a href="#">추가</a></span> 	 			<span class="btn_pack medium icon"  id="btn_user_remove" ><span class="delete"></span><a href="#">삭제</a></span>		      </p>	    </div> 	    <div class="section" id="jqGridDiv2">   	    	<table id='jqGrid2' minuswh="200" fixwidth="N"></table>	    </div>	             </div>       </form>